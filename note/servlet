Servlet  (Server Applet) 服务器端小程序  （处理请求）

servlet = java + html

Servlet对象由Servlet容器创建  （Tomcat、JBoss...）

生命周期：
    *构造器     第一次请求时创建对象
    *init()     创建对象时调用
    *service()  每次处理请求时执行
    *destroy()  关闭服务器时执行

###############################
ServletConfig 与 ServletContext

ServletConfig：Servlet的配置对象；获取Servlet初始化参数、获取ServletContext对象、获取Servlet名称
ServletContext：Servlet的上下文对象；获取初始化参数（上下文）、获取真实路径、获取域对象

###############################
自定义Servlet
    1、实现Servlet接口
    2、继承继承HttpServlet

【请求和响应】
    请求：客户端向服务器 HttpServletRequest   由服务器创建，代表请求报文
    作用：1、获取请求参数  2、获取项目虚拟路径  3、转发（路径跳转）  4、域对象

    响应：服务器向客户端 HttpServletResponse   由服务器创建，代表响应报文
    作用：1、响应（文本|HTML）  2、重定向

###############################
Web应用中的路径问题：
    绝对路径：以“/”开头的路径
        *服务器解析，代表当前项目路径
            1、web.xml中的url
            2、转发
        *浏览器解析，代表服务器路径
            1、html中的路径，script|img【src】  link|a【href】  form【action 】
            2、重定向

Web应用中的乱码问题：
    （服务器的编码与解码默认一致：ISO-8859-1）
    （浏览器的编码：UTF-8         解码：GBK）
    1、请求乱码
        POST：request.setCharacterEncoding("UTF-8");
        GET：tomcat server.xml文件设置URIEncoding="UTF-8"
        <Connector port="8080" protocol="HTTP/1.1" connectionTimeout="20000" redirectPort="8443" URIEncoding="UTF-8"/>
    2、响应乱码
        [1]服务器设置成GBK  response.setCharacterEncoding("GBK");
        [2]服务器和浏览器均设置为UTF-8  response.setContentType("text/html; charset=UTF-8");
